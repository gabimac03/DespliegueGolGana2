name: CD - Deploy to GKE (PROD)

on:
  push:
    branches:
      - prod

env:
  PROJECT_ID: proyecto-golgana-cloud
  GKE_CLUSTER: golgana-cluster
  GKE_REGION: us-central1
  IMAGE_BACKEND: gabimac033/golgana-backend
  IMAGE_FRONTEND: gabimac033/golgana-frontend
  TAG: v${{ github.run_number }}

jobs:
  deploy:
    name: Build, Push & Deploy to GKE
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: gke-gcloud-auth-plugin

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend :${{ env.TAG }}
        run: |
          docker build -t $IMAGE_BACKEND:${{ env.TAG }} ./appdemo/backend
          docker push $IMAGE_BACKEND:${{ env.TAG }}

      - name: Build and Push Frontend :${{ env.TAG }}
        run: |
          docker build -t $IMAGE_FRONTEND:${{ env.TAG }} ./appdemo/frontend
          docker push $IMAGE_FRONTEND:${{ env.TAG }}

      - name: Update image tag in Kubernetes manifests
        run: |
          sed -i "s|image: $IMAGE_BACKEND:.*|image: $IMAGE_BACKEND:${{ env.TAG }}|" appdemo/k8s-manifests/backend/backend-deployment.yaml
          sed -i "s|image: $IMAGE_FRONTEND:.*|image: $IMAGE_FRONTEND:${{ env.TAG }}|" appdemo/k8s-manifests/frontend/frontend-deployment.yaml

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --region $GKE_REGION

      - name: Deploy to GKE
        run: |
          kubectl apply -f appdemo/k8s-manifests/ --recursive
          kubectl rollout restart deployment backend -n dev
          kubectl rollout restart deployment frontend-deployment -n dev
